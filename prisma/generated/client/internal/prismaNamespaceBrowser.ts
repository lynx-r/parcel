
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.js'
export type * from './prismaNamespace.js'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  FsmState: 'FsmState',
  FsmAction: 'FsmAction',
  FsmTransition: 'FsmTransition',
  FsmActionLog: 'FsmActionLog',
  FsmErrorLog: 'FsmErrorLog',
  Order: 'Order',
  StageOrder: 'StageOrder',
  Trip: 'Trip'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const FsmStateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  label: 'label'
} as const

export type FsmStateScalarFieldEnum = (typeof FsmStateScalarFieldEnum)[keyof typeof FsmStateScalarFieldEnum]


export const FsmActionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  label: 'label'
} as const

export type FsmActionScalarFieldEnum = (typeof FsmActionScalarFieldEnum)[keyof typeof FsmActionScalarFieldEnum]


export const FsmTransitionScalarFieldEnum = {
  id: 'id',
  from_state_id: 'from_state_id',
  action_id: 'action_id',
  to_state_id: 'to_state_id'
} as const

export type FsmTransitionScalarFieldEnum = (typeof FsmTransitionScalarFieldEnum)[keyof typeof FsmTransitionScalarFieldEnum]


export const FsmActionLogScalarFieldEnum = {
  id: 'id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  action_name: 'action_name',
  from_state: 'from_state',
  to_state: 'to_state',
  user_id: 'user_id',
  created_at: 'created_at'
} as const

export type FsmActionLogScalarFieldEnum = (typeof FsmActionLogScalarFieldEnum)[keyof typeof FsmActionLogScalarFieldEnum]


export const FsmErrorLogScalarFieldEnum = {
  id: 'id',
  error_time: 'error_time',
  error_message: 'error_message',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  action_name: 'action_name',
  user_id: 'user_id'
} as const

export type FsmErrorLogScalarFieldEnum = (typeof FsmErrorLogScalarFieldEnum)[keyof typeof FsmErrorLogScalarFieldEnum]


export const OrderScalarFieldEnum = {
  id: 'id',
  status: 'status',
  description: 'description'
} as const

export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


export const StageOrderScalarFieldEnum = {
  id: 'id',
  status: 'status',
  description: 'description'
} as const

export type StageOrderScalarFieldEnum = (typeof StageOrderScalarFieldEnum)[keyof typeof StageOrderScalarFieldEnum]


export const TripScalarFieldEnum = {
  id: 'id',
  status: 'status',
  description: 'description'
} as const

export type TripScalarFieldEnum = (typeof TripScalarFieldEnum)[keyof typeof TripScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const FsmStateOrderByRelevanceFieldEnum = {
  name: 'name',
  label: 'label'
} as const

export type FsmStateOrderByRelevanceFieldEnum = (typeof FsmStateOrderByRelevanceFieldEnum)[keyof typeof FsmStateOrderByRelevanceFieldEnum]


export const FsmActionOrderByRelevanceFieldEnum = {
  name: 'name',
  label: 'label'
} as const

export type FsmActionOrderByRelevanceFieldEnum = (typeof FsmActionOrderByRelevanceFieldEnum)[keyof typeof FsmActionOrderByRelevanceFieldEnum]


export const FsmActionLogOrderByRelevanceFieldEnum = {
  entity_type: 'entity_type',
  action_name: 'action_name',
  from_state: 'from_state',
  to_state: 'to_state'
} as const

export type FsmActionLogOrderByRelevanceFieldEnum = (typeof FsmActionLogOrderByRelevanceFieldEnum)[keyof typeof FsmActionLogOrderByRelevanceFieldEnum]


export const FsmErrorLogOrderByRelevanceFieldEnum = {
  error_message: 'error_message',
  entity_type: 'entity_type',
  action_name: 'action_name'
} as const

export type FsmErrorLogOrderByRelevanceFieldEnum = (typeof FsmErrorLogOrderByRelevanceFieldEnum)[keyof typeof FsmErrorLogOrderByRelevanceFieldEnum]


export const OrderOrderByRelevanceFieldEnum = {
  status: 'status',
  description: 'description'
} as const

export type OrderOrderByRelevanceFieldEnum = (typeof OrderOrderByRelevanceFieldEnum)[keyof typeof OrderOrderByRelevanceFieldEnum]


export const StageOrderOrderByRelevanceFieldEnum = {
  status: 'status',
  description: 'description'
} as const

export type StageOrderOrderByRelevanceFieldEnum = (typeof StageOrderOrderByRelevanceFieldEnum)[keyof typeof StageOrderOrderByRelevanceFieldEnum]


export const TripOrderByRelevanceFieldEnum = {
  status: 'status',
  description: 'description'
} as const

export type TripOrderByRelevanceFieldEnum = (typeof TripOrderByRelevanceFieldEnum)[keyof typeof TripOrderByRelevanceFieldEnum]

